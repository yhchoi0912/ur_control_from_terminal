[0.031s] Invoking command in '/home/tsi/ws_moveit2/build/move_relative_ur': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/tsi/workspace/install/moveit_configs_utils:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/tsi/ws_moveit2/build/move_relative_ur -- -j12 -l12
[0.172s] [  0%] Built target ament_cmake_python_symlink_move_relative_ur
[0.181s] [  2%] Built target move_relative_ur__rosidl_generator_type_description
[0.217s] [  5%] Built target move_relative_ur__cpp
[0.236s] [ 18%] Built target move_relative_ur__rosidl_generator_c
[0.288s] [ 50%] Built target move_relative_ur__rosidl_typesupport_c
[0.288s] [ 50%] Built target move_relative_ur__rosidl_typesupport_introspection_c
[0.289s] [ 50%] Built target move_relative_ur__rosidl_typesupport_introspection_cpp
[0.289s] [ 50%] Built target move_relative_ur__rosidl_typesupport_fastrtps_cpp
[0.292s] [ 57%] Built target move_relative_ur__rosidl_typesupport_cpp
[0.296s] [ 65%] Built target move_relative_ur__rosidl_typesupport_fastrtps_c
[0.341s] [ 65%] Built target move_relative_ur
[0.347s] [ 68%] [32mBuilding CXX object CMakeFiles/robot_monitoring_node.dir/src/move_monitoring_node.cpp.o[0m
[0.352s] [ 71%] [32mBuilding CXX object CMakeFiles/move_relative_node.dir/src/move_relative.cpp.o[0m
[0.376s] [ 73%] Built target move_relative_ur__py
[0.426s] [ 78%] Built target move_relative_ur__rosidl_generator_py
[0.470s] [ 84%] Built target move_relative_ur_s__rosidl_typesupport_introspection_c
[0.480s] [ 89%] Built target move_relative_ur_s__rosidl_typesupport_c
[0.480s] [ 94%] Built target move_relative_ur_s__rosidl_typesupport_fastrtps_c
[0.648s] running egg_info
[0.691s] writing move_relative_ur.egg-info/PKG-INFO
[0.691s] writing dependency_links to move_relative_ur.egg-info/dependency_links.txt
[0.691s] writing top-level names to move_relative_ur.egg-info/top_level.txt
[0.856s] reading manifest file 'move_relative_ur.egg-info/SOURCES.txt'
[0.856s] writing manifest file 'move_relative_ur.egg-info/SOURCES.txt'
[0.918s] [ 94%] Built target ament_cmake_python_build_move_relative_ur_egg
[3.434s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27[m[K,
[3.434s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K,
[3.435s]                  from [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:1[m[K:
[3.435s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:[m[K In function ‚Äò[01m[Kint[01;32m[K main[m[K(int, char**)[m[K‚Äô:
[3.435s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.436s]   120 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.436s]       |                 [01;31m[K^~~~[m[K
[3.436s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.436s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.437s]   120 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.437s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.437s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.437s]   120 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.438s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.438s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.438s]   120 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.438s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.439s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24[m[K:
[3.439s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.439s]   120 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.439s]       |                 [01;31m[K^~~~[m[K
[3.440s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_relative.cpp:120:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.440s]   120 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "move ÎÖ∏Îìú Ï¢ÖÎ£å??");
[3.440s]       |                 [01;31m[K^~~~[m[K
[3.551s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27[m[K,
[3.551s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K,
[3.552s]                  from [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:1[m[K:
[3.552s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:[m[K In function ‚Äò[01m[Kint[01;32m[K main[m[K(int, char**)[m[K‚Äô:
[3.552s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.552s]    70 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.552s]       |                 [01;31m[K^~~~[m[K
[3.553s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.553s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.553s]    70 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.553s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.553s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.553s]    70 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.554s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.554s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:5:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.554s]    70 |     [01;31m[KRCLCPP_INFO[m[K(this->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.554s]       |     [01;31m[K^~~~~~~~~~~[m[K
[3.554s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24[m[K:
[3.555s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.555s]    70 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.555s]       |                 [01;31m[K^~~~[m[K
[3.555s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:70:17:[m[K [01;31m[Kerror: [m[Kinvalid use of ‚Äò[01m[Kthis[m[K‚Äô in non-member function
[3.555s]    70 |     RCLCPP_INFO([01;31m[Kthis[m[K->get_logger(), "monitoring ÎÖ∏ÎìúÍ∞Ä Í∑∏ÎÉ• Ï¢ÖÎ£åÎêòÎäîÍ±¥Í∞Ä??");
[3.555s]       |                 [01;31m[K^~~~[m[K
[4.267s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[4.267s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[4.268s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[4.269s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[4.269s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[4.270s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[4.270s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[4.270s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[4.271s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[4.271s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K:
[4.271s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of ‚Äò[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::[01;32m[Kset[m[K(CallbackT) [35m[K[with CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[K‚Äô:
[4.272s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:[m[K   required from ‚Äò[01m[Krclcpp::SubscriptionFactory rclcpp::[01;32m[Kcreate_subscription_factory[m[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.272s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::[01;32m[Kcreate_subscription[m[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.272s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::[01;32m[Kcreate_subscription[m[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::[01;32m[Kcreate_subscription[m[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.273s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:17:89:[m[K   required from here
[4.274s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23:[m[K [01;31m[Kerror: [m[Kno match for ‚Äò[01m[Koperator=[m[K‚Äô (operand types are ‚Äò[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void>, false, false>::variant_type[m[K‚Äô {aka ‚Äò[01m[Kstd::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[K‚Äô} and ‚Äò[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>, void>::callback_type[m[K‚Äô {aka ‚Äò[01m[Kstd::function<void(const std::__cxx11::basic_string<char>&)>[m[K‚Äô})
[4.274s]   396 |     [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[4.274s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.274s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K,
[4.275s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K:
[4.275s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: ‚Äò[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[K[m[K‚Äô
[4.275s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[4.275s]       |         [01;36m[K^~~~~~~~[m[K
[4.275s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.276s] /usr/include/c++/13/variant: In substitution of ‚Äò[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = std::function<void(const std::__cxx11::basic_string<char>&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[K[m[K‚Äô:
[4.276s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of ‚Äò[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = std::function<void(const std::__cxx11::basic_string<char>&)>][m[K[m[K‚Äô
[4.276s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23:[m[K   required from ‚Äò[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::[01;32m[Kset[m[K(CallbackT) [35m[K[with CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[K‚Äô
[4.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:[m[K   required from ‚Äò[01m[Krclcpp::SubscriptionFactory rclcpp::[01;32m[Kcreate_subscription_factory[m[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::[01;32m[Kcreate_subscription[m[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::[01;32m[Kcreate_subscription[m[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::[01;32m[Kcreate_subscription[m[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.277s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:17:89:[m[K   required from here
[4.277s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named ‚Äò[01m[Ktype[m[K‚Äô in ‚Äò[01m[Kstruct std::enable_if<false, void>[m[K‚Äô
[4.278s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[4.278s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[4.278s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of ‚Äò[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::[01;32m[Kset[m[K(CallbackT) [35m[K[with CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[K‚Äô:
[4.278s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:[m[K   required from ‚Äò[01m[Krclcpp::SubscriptionFactory rclcpp::[01;32m[Kcreate_subscription_factory[m[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.278s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::[01;32m[Kcreate_subscription[m[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.279s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::[01;32m[Kcreate_subscription[m[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.279s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from ‚Äò[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::[01;32m[Kcreate_subscription[m[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [35m[K[with MessageT = ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::allocator<void> > >][m[K[m[K‚Äô
[4.279s] [01m[K/home/tsi/ws_moveit2/src/move_relative_ur/src/move_monitoring_node.cpp:17:89:[m[K   required from here
[4.279s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: ‚Äò[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[K[m[K‚Äô
[4.279s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[4.279s]       |                [01;36m[K^~~~~~~~[m[K
[4.280s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from ‚Äò[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>, void>::callback_type[m[K‚Äô {aka ‚Äò[01m[Kstd::function<void(const std::__cxx11::basic_string<char>&)>[m[K‚Äô} to ‚Äò[01m[Kconst std::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[K‚Äô
[4.280s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[4.280s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[4.280s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: ‚Äò[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[K[m[K‚Äô
[4.280s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[4.281s]       |                [01;36m[K^~~~~~~~[m[K
[4.281s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from ‚Äò[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::_Bind<void (RobotMonitoringNode::*(RobotMonitoringNode*, std::_Placeholder<1>))(const std::__cxx11::basic_string<char>&)>, void>::callback_type[m[K‚Äô {aka ‚Äò[01m[Kstd::function<void(const std::__cxx11::basic_string<char>&)>[m[K‚Äô} to ‚Äò[01m[Kstd::variant<std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&)>, std::function<void(const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> >, std::default_delete<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<ur_dashboard_msgs::msg::SafetyMode_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[K‚Äô
[4.281s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[4.281s]       |                          [01;36m[K^~~~~~~~~[m[K
[6.210s] gmake[2]: *** [CMakeFiles/move_relative_node.dir/build.make:76: CMakeFiles/move_relative_node.dir/src/move_relative.cpp.o] Error 1
[6.210s] gmake[1]: *** [CMakeFiles/Makefile2:627: CMakeFiles/move_relative_node.dir/all] Error 2
[6.210s] gmake[1]: *** Waiting for unfinished jobs....
[7.014s] gmake[2]: *** [CMakeFiles/robot_monitoring_node.dir/build.make:76: CMakeFiles/robot_monitoring_node.dir/src/move_monitoring_node.cpp.o] Error 1
[7.014s] gmake[1]: *** [CMakeFiles/Makefile2:655: CMakeFiles/robot_monitoring_node.dir/all] Error 2
[7.015s] gmake: *** [Makefile:146: all] Error 2
[7.020s] Invoked command in '/home/tsi/ws_moveit2/build/move_relative_ur' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/tsi/workspace/install/moveit_configs_utils:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/tsi/ws_moveit2/build/move_relative_ur -- -j12 -l12
